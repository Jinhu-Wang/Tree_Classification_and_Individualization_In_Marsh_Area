if(POLICY CMP0057)
  cmake_policy(SET CMP0057 NEW) # support the use of "IN_LIST"
endif()

include(CMakeFindDependencyMacro)
find_dependency(Threads)

# Compute paths
get_filename_component(Easy3D_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

set(Trees3D_INCLUDE_DIRS "@CONF_Trees3D_INCLUDE_DIRS@")
set(Trees3D_LIBRARY_DIRS "@CONF_Trees3D_LIBRARY_DIRS@")
set(Trees3D_AVAILABLE_COMPONENTS "@CONF_Trees3D_COMPONENTS@")
set(Trees3D_VERSION_STRING "@CONF_Trees3D_VERSION@")
set(Trees3D_VERSION @CONF_Trees3D_VERSION@)

set(found_components "")
set(missing_components "")
foreach(component ${Trees3D_FIND_COMPONENTS})
    string(TOLOWER ${component} component)  # not case sensitive
    if (component MATCHES "^trees3d::")      # treat 'trees3d::name' as 'name'
        string(REPLACE "trees3d::" "" component ${component})
    endif ()
    if (component MATCHES "^trees3d_")       # treat 'trees3d_name' as 'name'
        string(REPLACE "trees3d_" "" component ${component})
    endif ()

    if (component IN_LIST Trees3D_AVAILABLE_COMPONENTS)
        list(APPEND found_components ${component})
        set(Trees3D_${component}_FOUND TRUE)
    else ()
        list(APPEND missing_components ${component})
        set(Trees3D_${component}_FOUND FALSE)
    endif ()
endforeach()

set(LIB_TYPE @Trees3D_LIB_TYPE@)
string(TOLOWER "${LIB_TYPE} libraries" lib_type)
if (Trees3D_FIND_COMPONENTS) # user tries to find components
    set(components_to_link ${found_components})
    if (missing_components)
        message(WARNING "Not all requested Trees3D components have been found.\n"
                        "Found components (${lib_type}): ${found_components}\n"
                        "Missing components: ${missing_components}\n"
                        "Make sure all components have been built and their names are correctly specified. "
                        "The available Trees3D components (${lib_type}): ${Trees3D_AVAILABLE_COMPONENTS}\n")
    elseif (found_components)
        set(Trees3D_FOUND TRUE)
        message(STATUS "Found Trees3D (version '@CONF_Trees3D_VERSION@'). Found components (${lib_type}): ${found_components}")
        message(STATUS "Trees3D_INCLUDE_DIRS: ${Trees3D_INCLUDE_DIRS}")
        message(STATUS "Trees3D_LIBRARY_DIRS: ${Trees3D_LIBRARY_DIRS}")
    endif()
else ()
    set(components_to_link ${Trees3D_AVAILABLE_COMPONENTS})
    foreach(component ${Trees3D_AVAILABLE_COMPONENTS})
        set(Trees3D_${component}_FOUND TRUE)
    endforeach()
    message(STATUS "Found Trees3D (version '@CONF_Trees3D_VERSION@'). Available components (${lib_type}): ${Trees3D_AVAILABLE_COMPONENTS}")
    message(STATUS "Trees3D_INCLUDE_DIRS: ${Trees3D_INCLUDE_DIRS}")
    message(STATUS "Trees3D_LIBRARY_DIRS: ${Trees3D_LIBRARY_DIRS}")
endif ()



# Our library dependencies (contains definitions for IMPORTED targets)
include("${Trees3D_CMAKE_DIR}/Trees3DTargets.cmake")